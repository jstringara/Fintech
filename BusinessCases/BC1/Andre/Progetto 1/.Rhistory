setwd("C:/Users/andre/Desktop/Progetto Applied Stat")
setwd("C:/Users/andre/Desktop/Progetto Applied Stat")
rm(list=ls())
library(sf)
library(sp)
library(ggplot2)
install.packages("Rcpp")
setwd("C:/Users/andre/Desktop/Progetto Applied Stat")
rm(list=ls())
library(sf)
library(sp)
library(ggplot2)
# Shapefile con i segmenti di strada
data = st_read("Dataset/Road_cleaned2.shp")
# Shapefile con i segmenti di strada
data = st_read("Road_cleaned2.shp")
data = data[order(as.numeric(data$id)),]
data
N_streets = dim(data)[1]
summary(data$Length)
cbind( "n"=table(data$osm_typo),
"perc"=round(table(data$osm_typo)/N_streets*100,2) )
cbind( "n"=table(data$osm_surf),
"perc"=round(table(data$osm_surf)/N_streets*100,2) )
# Greater Maputo area:
st_bbox(data)
(st_bbox(data)[3]-st_bbox(data)[1])*(st_bbox(data)[4]-st_bbox(data)[2]) # area
sum(data$Length)*1e-03 # km
# plot di alcuni segmenti:
i_asp = which(data$osm_surf=="paved")
i_unp = which(data$osm_surf=="unpaved")
i_unk = which(data$osm_surf=="unk")
ttt = character(dim(data)[1])
ttt[i_unk]= "1. unknown"; ttt[i_unp]="2. unpaved"; ttt[i_asp]="3. paved"
windows();  ggplot() +
geom_sf(data = data, aes(color=ttt,fill=ttt))+
scale_fill_manual(values=c("snow2", "#ffb01e", "grey45"))+
scale_color_manual(values=c("snow2", "#ffb01e", "grey45"))+
labs(fill= "Pavement surface")+
#ggtitle("Road network of the Greater Maputo area") +
coord_sf() +
theme(panel.grid.major = element_line(color = gray(.9), linetype=3, size=0.2),
panel.background = element_rect(fill="white"))+
guides(color=FALSE)
library(rgdal)
library(sp)
library(rgdal)
library(sp)
library(raster)
head(data[which(data$osm_surf=="paved"),])
head(data[which(data$osm_surf=="unpaved"),])
# paved and unpaved
setwd("C:/Users/Arianna/OneDrive - Politecnico di Milano/aa PhD/Corsi 2021-22/Applied Statistics - Tutor/Dataset/Some images")
library(readxl)
BankClients <- read_excel("BankClients.xlsx")
library(readxl)
setwd("C:/Users/andre/Desktop/Magistrale/FINTECH/ZENTI/Progetto 1")
library(readxl)
BankClients <- read_excel("BankClients.xlsx")
BankClients = data.frame(BankClients)
head(BankClients)
dim(BankClients)
BankClients = BankClients[, -1]
colnames(BankClients)
CatVar = c("Gender", "Job", "Area", "CitySize", "FamilySize", "Investments")
CatVar_index = c(which(colnames(BankClients)==CatVar[1]),
which(colnames(BankClients)==CatVar[2]),
which(colnames(BankClients)==CatVar[3]),
which(colnames(BankClients)==CatVar[4]),
which(colnames(BankClients)==CatVar[5]),
which(colnames(BankClients)==CatVar[6])
)
NumVar = colnames(BankClients)[-CatVar_index]
length(NumVar) + length(CatVar) == dim(BankClients)[2]
NumVar_index = numeric(length(NumVar))
for (i in 1:length(NumVar))
{
NumVar_index[i] = which(colnames(BankClients)==NumVar[i])
}
dfNum = BankClients[, NumVar_index]
head(dfNum)
# boxplot
x11()
x11()
par(mfrow = c(1,2))
boxplot(dfNum, col = "azure3", main="with age")
# temporarily remove age
boxplot(dfNum[,-1], col = "orange", main = "without age")
x11()
par(mfrow = c(1,1))
boxplot(scale(dfNum), col = "azure3", main ="rescaled dataset")
# lifestyle, luxury and debt:
x11()
plot(dfNum[,c(which(names(dfNum)=="LifeStyle"),which(names(dfNum)=="Luxury"),which(names(dfNum)=="Debt"))])
x11()
bagplot_matrix <- aplpack::bagplot.pairs(dfNum[,c(which(names(dfNum)=="LifeStyle"),which(names(dfNum)=="Luxury"),which(names(dfNum)=="Debt"))])
# income, wealth, ESG
x11()
plot(dfNum[,c(which(names(dfNum)=="Income"),which(names(dfNum)=="Wealth"),which(names(dfNum)=="ESG"))])
x11()
bagplot_matrix <- aplpack::bagplot.pairs(dfNum[,c(which(names(dfNum)=="Income"),which(names(dfNum)=="Wealth"),which(names(dfNum)=="ESG"))])
# actually ESG does not seem to be correlated
set.seed(123)
x11()
plot(dfNum[sample(1:dim(dfNum)[1], size = 1000),], pch = 20)
# correlation plot
x11()
library(corrplot)
dfNum_temp = dfNum
dfNum_temp$Age = dfNum_temp$Age + rnorm(dim(dfNum_temp)[1], mean=0, sd=0.01)
corrplot(cor(dfNum_temp), type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
cor(dfNum)
dim(dfNum)
x11()
par(mfrow = c(2,3))
for (i in 1:6)
{
hist(dfNum[,i], main = colnames(dfNum)[i], freq = FALSE)
}
x11()
par(mfrow = c(2,3))
for (i in 7:length(NumVar))
{
hist(dfNum[,i], main = colnames(dfNum)[i], freq = FALSE)
}
pc.data <- princomp(scale(dfNum), scores=T)
summary(pc.data)
load.data <- pc.data$loadings
x11()
par(mfcol = c(4,3))
for(i in 1:11) barplot(load.data[,i], ylim = c(-1, 1), main=paste("PC",i))
x11()
par(mfcol = c(1,3))
for(i in 1:3) barplot(load.data[,i], ylim = c(-1, 1), main=paste("PC",i))
# graphics.off()
data_reduced_scaled = scale(dfNum)
layout(matrix(c(2,3,1,3),2,byrow=T))
plot(pc.data, las=2, main='Principal Components', ylim=c(0,7))
abline(h=1, col='blue')
barplot(sapply(as.data.frame(data_reduced_scaled),sd)^2, las=2, main='Original Variables', ylim=c(0,7), ylab='Variances')
plot(cumsum(pc.data$sde^2)/sum(pc.data$sde^2), type='b', axes=F, xlab='Number of components', ylab='Contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.62, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:ncol(data_reduced_scaled),labels=1:ncol(data_reduced_scaled),las=2)
data_reduced_scaled = as.data.frame(data_reduced_scaled)
scores = pc.data$scores
par(mfrow=c(1,1))
plot(scores[,1], scores[,2], pch = 20, xlab="PC1", ylab="PC2")
plot3d(scores[,1], scores[,2], scores[,3])
layout(matrix(c(1,1,3,3,5,5, 2,2,4,4,6,6), 2, 6, byrow = TRUE))
for (i in 1:3)
{
shapiro.test(scores[,i])
# layout(matrix(c(1,1,2,2)))
string = paste("PC",toString(i), sep="")
string = paste(string,  " - p.value shapiro: ", sep="")
hist(scores[,i], breaks = 100, main = paste(string,
toString(shapiro.test(scores[,i])$p.value)),
xlab="")
qqnorm(scores[,i])
qqline(scores[,i])
}
scores_dataset = data.frame(PC1 = scores[,1],
PC2 = scores[,2],
PC3 = scores[,3])
# kmeans with k = 3 and k = 4
set.seed(123)
km_3 = kmeans(scores_dataset, 3)
set.seed(123)
km_4 = kmeans(scores_dataset, 4)
plot3d(scores_dataset, col = km_3$cluster, main="3 clusters")
plot3d(scores_dataset, col = km_4$cluster, main="4 clusters")
dfNum$km3 = km_3$cluster
dfNum$km4 = km_4$cluster
BankClients$km3 = km_3$cluster
BankClients$km4 = km_4$cluster
names = colnames(dfNum)
BankClients <- read_excel("BankClients.xlsx")
graphics.off()
dfNum = dfNum[,c(-12,-13)]
BankClients = BankClients[,c(-18,-19)]
pc.data <- princomp(scale(dfNum), scores=T)
load.data <- pc.data$loadings
x11()
par(mfcol = c(1,3))
for(i in 1:3) barplot(load.data[,i], ylim = c(-1, 1), main=paste("PC",i))
# graphics.off()
layout(matrix(c(2,3,1,3),2,byrow=T))
plot(pc.data, las=2, main='Principal Components', ylim=c(0,7))
abline(h=1, col='blue')
barplot(sapply(as.data.frame(data_reduced_scaled),sd)^2, las=2, main='Original Variables', ylim=c(0,7), ylab='Variances')
plot(cumsum(pc.data$sde^2)/sum(pc.data$sde^2), type='b', axes=F, xlab='Number of components', ylab='Contribution to the total variance', ylim=c(0,1))
abline(h=1, col='blue')
abline(h=0.9, lty=2, col='blue')
box()
axis(2,at=0:10/10,labels=0:10/10)
axis(1,at=1:ncol(data_reduced_scaled),labels=1:ncol(data_reduced_scaled),las=2)
scores = pc.data$scores
par(mfrow=c(1,1))
plot(scores[,1], scores[,2], pch = 20, xlab="PC1", ylab="PC2")
plot3d(scores[,1], scores[,2], scores[,3])
dfNum.e <- dist(scores[,1:3], method='euclidean')
dfNum.es <- hclust(dfNum.e, method='single')
dfNum.ea <- hclust(dfNum.e, method='average')
dfNum.ec <- hclust(dfNum.e, method='complete')
dfNum.ew <- hclust(dfNum.e, method='ward.D2')
par(mfrow=c(1,4))
plot(dfNum.es, main='Euclidean Distance - Single Linkage', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
plot(dfNum.ec, main='Euclidean Distance - Complete Linkage', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
plot(dfNum.ea, main='Euclidean Distance - Average Linkage', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
plot(dfNum.ew, main='Euclidean Distance - Ward D2 Linkage', hang=-0.1, xlab='', labels=F, cex=0.6, sub='')
cluster.ew.3 <- cutree(dfNum.ew, k=3)
par(mfrow=c(1,1))
plot(scores[,1], scores[,2], pch = 20, xlab="PC1", ylab="PC2", col=cluster.ew.3)
plot3d(scores[,1], scores[,2], scores[,3], col=cluster.ew.3)
feature = cluster.ew.3
num_clusters = 3
for (j in c(3,6,9,11))
{
if (j==3)
inizio = 1
if (j==6)
inizio = 4
if (j==9)
inizio = 7
if (j==11)
inizio = 10
x11()
ncol = 3
massimo = 9
if (num_clusters==4)
{
ncol = 4
massimo = 12
}
layout(matrix(1:massimo, nrow = 3 , ncol = ncol, byrow = TRUE))
for (i in inizio:j)
{
hist(dfNum[which(feature == 1), i], main = names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i1,i]), col = "blue")
hist(dfNum[which(feature == 2), i], main = names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i2,i]), col = "blue")
hist(dfNum[which(feature == 3), i], main = names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i3,i]), col = "blue")
if(num_clusters==4)
{  hist(dfNum[which(feature == 4), i], main = names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
}
}
}
{par(mfrow=c(1,1))
i=8
hist(dfNum[i1,i], main=names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i1,i]), col = "blue")
}
table(cluster.ew.3)
i1 = which(cluster.ew.3 == 1)
i2 = which(cluster.ew.3 == 2)
i3 = which(cluster.ew.3 == 3)
graphics.off()
library(corrplot)
corrplot(cor(dfNum[i1,]), type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
hist(BankClients$Gender, freq=TRUE, main = "Gender", xlab = "")
hist(BankClients$Job, freq=TRUE, main = "Job", xlab = "") # Imbalanced
hist(BankClients$Area, freq=TRUE, main = "Area", xlab = "") # Imbalanced
hist(BankClients$CitySize, freq=TRUE, main = "CitySize", xlab = "")
hist(BankClients$FamilySize, freq=TRUE, main = "FamilySize", xlab = "") # Imbalanced
hist(BankClients$Investments, freq=TRUE, main = "Investments", xlab = "")
par(mfrow=c(1,1))
plot(scores[,1], scores[,2], pch = 20, xlab="PC1", ylab="PC2", col=cluster.ew.3)
plot3d(scores[,1], scores[,2], scores[,3], col=cluster.ew.3)
feature = cluster.ew.3
num_clusters = 3
for (j in c(3,6,9,11))
{
if (j==3)
inizio = 1
if (j==6)
inizio = 4
if (j==9)
inizio = 7
if (j==11)
inizio = 10
x11()
ncol = 3
massimo = 9
if (num_clusters==4)
{
ncol = 4
massimo = 12
}
layout(matrix(1:massimo, nrow = 3 , ncol = ncol, byrow = TRUE))
for (i in inizio:j)
{
hist(dfNum[which(feature == 1), i], main = names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i1,i]), col = "blue")
hist(dfNum[which(feature == 2), i], main = names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i2,i]), col = "blue")
hist(dfNum[which(feature == 3), i], main = names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i3,i]), col = "blue")
if(num_clusters==4)
{  hist(dfNum[which(feature == 4), i], main = names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
}
}
}
{par(mfrow=c(1,1))
i=8
hist(dfNum[i1,i], main=names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i1,i]), col = "blue")
}
table(cluster.ew.3)
{par(mfrow=c(1,1))
i=8
hist(dfNum[i1,i], main=names[i], xlab="")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i1,i]), col = "blue")
}
table(cluster.ew.3)
i1 = which(cluster.ew.3 == 1)
i2 = which(cluster.ew.3 == 2)
i3 = which(cluster.ew.3 == 3)
graphics.off()
library(corrplot)
corrplot(cor(dfNum[i1,]), type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
hist(BankClients$Gender, freq=TRUE, main = "Gender", xlab = "")
hist(BankClients$Job, freq=TRUE, main = "Job", xlab = "") # Imbalanced
hist(BankClients$Area, freq=TRUE, main = "Area", xlab = "") # Imbalanced
hist(BankClients$CitySize, freq=TRUE, main = "CitySize", xlab = "")
hist(BankClients$FamilySize, freq=TRUE, main = "FamilySize", xlab = "") # Imbalanced
hist(BankClients$Investments, freq=TRUE, main = "Investments", xlab = "")
hist(BankClients[i1,]$Gender, freq=TRUE, main = "Gender", xlab = "")
hist(BankClients[i1,]$Job, freq=TRUE, main = "Job", xlab = "")
# mostly impiegato/operaio
hist(BankClients[i1,]$Area, freq=TRUE, main = "Area", xlab = "")
# mostly nord
hist(BankClients[i1,]$CitySize, freq=TRUE, main = "CitySize", xlab = "")
# living in medie/piccole dimensione
hist(BankClients[i1,]$FamilySize, freq=TRUE, main = "FamilySize", xlab = "")
hist(BankClients[i1,]$Investments, freq=TRUE, main = "Investments", xlab = "")
# mostly capital accumulation
graphics.off()
hist(BankClients[i1,]$Gender, freq=TRUE, main = "Gender", xlab = "")
hist(BankClients[i1,]$Job, freq=TRUE, main = "Job", xlab = "")
# mostly impiegato/operaio
hist(BankClients[i1,]$Area, freq=TRUE, main = "Area", xlab = "")
# mostly nord
hist(BankClients[i1,]$CitySize, freq=TRUE, main = "CitySize", xlab = "")
# living in medie/piccole dimensione
hist(BankClients[i1,]$FamilySize, freq=TRUE, main = "FamilySize", xlab = "")
hist(BankClients[i1,]$Investments, freq=TRUE, main = "Investments", xlab = "")
# mostly capital accumulation
hist(BankClients[i1,]$Gender, freq=TRUE, main = "Gender", xlab = "")
hist(BankClients[i1,]$Job, freq=TRUE, main = "Job", xlab = "")
# mostly impiegato/operaio
hist(BankClients[i1,]$Area, freq=TRUE, main = "Area", xlab = "")
# mostly nord
hist(BankClients[i1,]$CitySize, freq=TRUE, main = "CitySize", xlab = "")
# living in medie/piccole dimensione
hist(BankClients[i1,]$FamilySize, freq=TRUE, main = "FamilySize", xlab = "")
hist(BankClients[i1,]$Investments, freq=TRUE, main = "Investments", xlab = "")
hist(BankClients[i1,]$Wealth, freq=TRUE, main = "Wealthr", xlab = "")
hist(BankClients[i1,]$Wealth, freq=TRUE, main = "Wealth", xlab = "")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i1,i]), col = "blue")
hist(BankClients[i1,]$Wealth, freq=TRUE, main = "Wealth", xlab = "")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i1,i]), col = "blue")
hist(BankClients[i1,]$Age, freq=TRUE, main = "Age", xlab = "")
abline(v=mean(dfNum[,i]), col = "red")
abline(v=mean(dfNum[i1,i]), col = "blue")
hist(BankClients[i1,]$Age, freq=TRUE, main = "Age", xlab = "")
abline(v=mean(dfNum[,1]), col = "red")
abline(v=mean(dfNum[i1,1]), col = "blue")
plot(scores[i1,1:2], col = "white", pch = 20)
